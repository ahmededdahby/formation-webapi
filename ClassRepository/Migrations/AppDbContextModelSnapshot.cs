// <auto-generated />
using ClassRepository.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassRepository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassRepository.Model.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CuisineId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            CuisineId = 1,
                            Name = "Italian"
                        },
                        new
                        {
                            CuisineId = 2,
                            Name = "French"
                        },
                        new
                        {
                            CuisineId = 3,
                            Name = "Japanese"
                        });
                });

            modelBuilder.Entity("ClassRepository.Model.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CuisineId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CuisineId");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CuisineId = 1,
                            Description = "We sell delicious fool",
                            Name = "Liverfool"
                        },
                        new
                        {
                            Id = 2,
                            CuisineId = 1,
                            Description = "Authentic Italian pizzas made fresh daily",
                            Name = "Pizza Palace"
                        },
                        new
                        {
                            Id = 3,
                            CuisineId = 1,
                            Description = "Juicy burgers and crispy fries",
                            Name = "Burger Barn"
                        },
                        new
                        {
                            Id = 4,
                            CuisineId = 1,
                            Description = "Fresh sushi rolls and sashimi",
                            Name = "Sushi Spot"
                        },
                        new
                        {
                            Id = 5,
                            CuisineId = 1,
                            Description = "Authentic Mexican tacos and burritos",
                            Name = "Taco Town"
                        },
                        new
                        {
                            Id = 6,
                            CuisineId = 1,
                            Description = "Spicy and flavorful Indian curries",
                            Name = "Curry House"
                        },
                        new
                        {
                            Id = 7,
                            CuisineId = 1,
                            Description = "Authentic Thai cuisine with a view",
                            Name = "Thai Terrace"
                        },
                        new
                        {
                            Id = 8,
                            CuisineId = 1,
                            Description = "Juicy steaks cooked to perfection",
                            Name = "Steakhouse"
                        },
                        new
                        {
                            Id = 9,
                            CuisineId = 1,
                            Description = "Satisfying bowls of ramen noodles",
                            Name = "Ramen Rave"
                        },
                        new
                        {
                            Id = 10,
                            CuisineId = 1,
                            Description = "Fresh seafood and shellfish dishes",
                            Name = "Seafood Shack"
                        });
                });

            modelBuilder.Entity("ClassRepository.Model.Restaurant", b =>
                {
                    b.HasOne("ClassRepository.Model.Cuisine", "Cuisine")
                        .WithMany()
                        .HasForeignKey("CuisineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cuisine");
                });
#pragma warning restore 612, 618
        }
    }
}
